{
  "uid" : "c8c49824f210b33",
  "name" : "test_printCarNamesandPrices[chrome-Honda-Honda Cars]",
  "fullName" : "test_Carwale.Test_Carwale#test_printCarNamesandPrices",
  "historyId" : "0fec80b28dd108381f016299a377dae3",
  "time" : {
    "start" : 1641495225174,
    "stop" : 1641495225174,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\n  (Session info: chrome=94.0.4606.71)",
  "statusTrace" : "request = <SubRequest 'get_browser' for <Function test_printCarNamesandPrices[chrome-Honda-Honda Cars]>>\n\n    @pytest.fixture(params=[\"chrome\"], scope=\"function\")\n    \n    # For class level execution\n    # @pytest.fixture(params=[\"chrome\"], scope=\"class\")\n    \n    def get_browser(request):\n        if request.param == \"chrome\":\n            driver = webdriver.Chrome(executable_path=ChromeDriverManager().install())\n        # if request.param == \"firefox\":\n        #     # driver = webdriver.Firefox(executable_path=GeckoDriverManager().install())\n        #     driver = webdriver.Firefox(executable_path='/Users/admin/PycharmProjects/PageObjectModelFramework/Drivers/geckodriver')\n    \n        request.cls.driver = driver\n    \n        # driver.get(\"https://www.facebook.com/\") # To directly pass the url\n        driver.get(ConfigReader.readConfig(\"basic info\", \"testURL\")) # To pass url from Conftest using ConfigReader\n>       driver.maximize_window()\n\nconftest.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:737: in maximize_window\n    self.execute(command, params)\n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f81a56efb80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: window was already closed\\\\n  ...fff72448109 _pthread_start + 148\\\\n20  libsystem_pthread.dylib             0x00007fff72443b8b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\nE         (Session info: chrome=94.0.4606.71)\n\n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchWindowException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 6,
  "retriesStatusChange" : true,
  "beforeStages" : [ {
    "name" : "get_browser",
    "time" : {
      "start" : 1641495225175,
      "stop" : 1641495266259,
      "duration" : 41084
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\n  (Session info: chrome=94.0.4606.71)\n\n",
    "statusTrace" : "  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/_pytest/fixtures.py\", line 925, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/Testcases/conftest.py\", line 46, in get_browser\n    driver.maximize_window()\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 737, in maximize_window\n    self.execute(command, params)\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/admin/PycharmProjects/PageObjectModelFramework/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\n  (Session info: chrome=94.0.4606.71)",
    "statusTrace" : "request = <SubRequest 'get_browser' for <Function test_printCarNamesandPrices[chrome-Honda-Honda Cars]>>\n\n    @pytest.fixture(params=[\"chrome\"], scope=\"function\")\n    \n    # For class level execution\n    # @pytest.fixture(params=[\"chrome\"], scope=\"class\")\n    \n    def get_browser(request):\n        if request.param == \"chrome\":\n            driver = webdriver.Chrome(executable_path=ChromeDriverManager().install())\n        # if request.param == \"firefox\":\n        #     # driver = webdriver.Firefox(executable_path=GeckoDriverManager().install())\n        #     driver = webdriver.Firefox(executable_path='/Users/admin/PycharmProjects/PageObjectModelFramework/Drivers/geckodriver')\n    \n        request.cls.driver = driver\n    \n        # driver.get(\"https://www.facebook.com/\") # To directly pass the url\n        driver.get(ConfigReader.readConfig(\"basic info\", \"testURL\")) # To pass url from Conftest using ConfigReader\n>       driver.maximize_window()\n\nconftest.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:737: in maximize_window\n    self.execute(command, params)\n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f81a56efb80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: window was already closed\\\\n  ...fff72448109 _pthread_start + 148\\\\n20  libsystem_pthread.dylib             0x00007fff72443b8b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\nE         (Session info: chrome=94.0.4606.71)\n\n../venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:242: NoSuchWindowException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "54008eb853a485a5",
      "name" : "log",
      "source" : "54008eb853a485a5.txt",
      "type" : "text/plain",
      "size" : 314
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"
  }, {
    "name" : "suite",
    "value" : "test_Carwale"
  }, {
    "name" : "subSuite",
    "value" : "Test_Carwale"
  }, {
    "name" : "host",
    "value" : "LiriQA1.local"
  }, {
    "name" : "thread",
    "value" : "35953-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_Carwale"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "carBrand",
    "value" : "'Honda'"
  }, {
    "name" : "carTitle",
    "value" : "'Honda Cars'"
  }, {
    "name" : "get_browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "cbb4bd15fd188cab",
      "status" : "passed",
      "time" : {
        "start" : 1641453261747,
        "stop" : 1641453271246,
        "duration" : 9499
      }
    }, {
      "uid" : "7ce59553a07abc7",
      "status" : "passed",
      "time" : {
        "start" : 1641390487062,
        "stop" : 1641390494554,
        "duration" : 7492
      }
    }, {
      "uid" : "c6aa7893003fe76a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\n  (Session info: chrome=94.0.4606.71)",
      "time" : {
        "start" : 1641389074399,
        "stop" : 1641389074399,
        "duration" : 0
      }
    }, {
      "uid" : "951985ca92e1d0f4",
      "status" : "passed",
      "time" : {
        "start" : 1641388713933,
        "stop" : 1641388725573,
        "duration" : 11640
      }
    }, {
      "uid" : "43342567d3f7127f",
      "status" : "passed",
      "time" : {
        "start" : 1641387445220,
        "stop" : 1641387452397,
        "duration" : 7177
      }
    }, {
      "uid" : "34b85fd597a94aa7",
      "status" : "passed",
      "time" : {
        "start" : 1641368355113,
        "stop" : 1641368363207,
        "duration" : 8094
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "d30e9a7290d04dac",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/17/allure/#testresult/d30e9a7290d04dac",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "7759dd13328f88a7",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/16/allure/#testresult/7759dd13328f88a7",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "3ff46dbf3d89d44e",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/15/allure/#testresult/3ff46dbf3d89d44e",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "4f55c5c6f9abc207",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/14/allure/#testresult/4f55c5c6f9abc207",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "8fb5fc16db886c07",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/13/allure/#testresult/8fb5fc16db886c07",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "ddd8efe3629bf2e5",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/12/allure/#testresult/ddd8efe3629bf2e5",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "9b8ed29e14e104c",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/11/allure/#testresult/9b8ed29e14e104c",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "44688dc78867f910",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/10/allure/#testresult/44688dc78867f910",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "88a1f8ac2bc7832e",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/9/allure/#testresult/88a1f8ac2bc7832e",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "2f849ce6a901858",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/8/allure/#testresult/2f849ce6a901858",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "974b583c59b79fc",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/7/allure/#testresult/974b583c59b79fc",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "5fc36df1dcf5838a",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/6/allure/#testresult/5fc36df1dcf5838a",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "12ea2440c65b9315",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/5/allure/#testresult/12ea2440c65b9315",
        "status" : "passed",
        "time" : {
          "start" : 1641453261747,
          "stop" : 1641453271246,
          "duration" : 9499
        }
      }, {
        "uid" : "8a5e3f1513ea3c65",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/4/allure/#testresult/8a5e3f1513ea3c65",
        "status" : "passed",
        "time" : {
          "start" : 1641390487062,
          "stop" : 1641390494554,
          "duration" : 7492
        }
      }, {
        "uid" : "cfaae1e7583b1cf1",
        "reportUrl" : "http://localhost:8080/job/PageObjectModelPython/3/allure/#testresult/cfaae1e7583b1cf1",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.NoSuchWindowException: Message: no such window: window was already closed\n  (Session info: chrome=94.0.4606.71)",
        "time" : {
          "start" : 1641389074399,
          "stop" : 1641389074399,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('log_on_failure', 'get_browser')" ]
  },
  "source" : "c8c49824f210b33.json",
  "parameterValues" : [ "'Honda'", "'Honda Cars'", "'chrome'" ]
}